<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.rollinghealer.place.model.mapper.PlaceMapper">

<!-- 전체 데이터에 비해 사용자 생성 데이터는 극히 드물기때문에 join으로 N번 조인하는 것보다 필요할때 일일이 쿼리하는게  이득?  -->
<resultMap id="placeInfoDtoMap" type="placeInfoDto">
    <id property="content_id" column="content_id"/>
    <result property="title" column="title"/>
    <result property="addr1" column="addr1"/>
    <result property="addr2" column="addr2"/>
    <result property="area_code" column="area_code"/>
    <result property="content_type_id" column="content_type_id"/>
    <result property="latitude" column="latitude"/>
    <result property="longitude" column="longitude"/>
    <result property="mlevel" column="mlevel"/>
    <result property="tel" column="tel"/>
    <result property="first_image" column="first_image"/>
    <result property="first_image2" column="first_image2"/>
    <result property="cat1" column="cat1"/>
    <result property="cat2" column="cat2"/>
    <result property="cat3" column="cat3"/>
    <result property="book_tour" column="book_tour"/>
    <result property="update_date" column="modified_time"/>
    <result property="create_date" column="created_time"/>
    <result property="is_custom"  column="is_custom"/>
    <result property="sigungucode" column="sigungucode"/>
 	<!--  
 		<association property="extra_info"  autoMapping="true" column="content_id" notNullColumn="is_custom_info" javaType="placeInfoExtraDto" select="selectOnePlaceInfoExtra"/>
	-->
 		<association property="extra_info" javaType="placeInfoExtraDto" columnPrefix="extra_" >
	 	<id property="content_id" column="content_id"/>
		  <result property="description" column="description"/>
		  <result property="create_by" column="create_by"/>
		  <result property="is_delete" column="is_delete"/>
		  <result property="delete_at" column="delete_at"/>
		  <result property="create_at" column="create_at"/>
	 	</association>
 	
</resultMap>

<resultMap id="placeInfoExtraDtoMap" type="placeInfoExtraDto" >
  <id property="content_id" column="content_id"/>
  <result property="description" column="description"/>
  <result property="create_by" column="create_by"/>
  <result property="is_delete" column="is_delete"/>
  <result property="delete_at" column="delete_at"/>
  <result property="create_at" column="create_at"/>
</resultMap>


<insert id="insertPlaceInfoDtoList" parameterType="List">
        INSERT INTO place_info 
        (
        title, 
        addr1, 
        addr2, 
        area_code, 
        content_type_id, 
        latitude, 
        longitude, 
        mlevel, 
        tel, 
        first_image, 
        first_image2, 
        cat1, 
        cat2, 
        cat3, 
        book_tour, 
        update_date, 
        create_date, 
        content_id,
        sigungucode
        )
        VALUES
    <foreach collection="list" item="item" index="index" separator=",">
    (
            #{item.title},
            #{item.addr1},
            #{item.addr2},
            #{item.area_code},
            #{item.content_type_id},
            #{item.latitude}, 
            #{item.longitude}, 
            #{item.mlevel}, 
            #{item.tel}, 
            #{item.first_image},
            #{item.first_image2}, 
            #{item.cat1}, 
            #{item.cat2}, 
            #{item.cat3}, 
            #{item.book_tour},
            STR_TO_DATE(#{item.update_date},'%Y%m%d%H%i%s'),
            STR_TO_DATE(#{item.create_date},'%Y%m%d%H%i%s'),
            #{item.content_id},
            #{item.sigungucode}
     )
    </foreach>
    AS new
        ON DUPLICATE KEY UPDATE
            title =new.title, 
            addr1 =new.addr1, 
            addr2 =new.addr2,
            area_code =new.area_code, 
            content_type_id =new.content_type_id,
            latitude =new.latitude, 
            longitude =new.longitude, 
            mlevel =new.mlevel,
            tel =new.tel, 
            first_image =new.first_image,
            first_image2 =new.first_image2, 
            cat1 =new.cat1,
            cat2 =new.cat2, 
            cat3 =new.cat3, 
            book_tour =new.book_tour,
            update_date = new.update_date,
            create_date = new.create_date,
            sigungucode =new.sigungucode;
    
</insert>

<sql id="setPlaceInfo" >
	<set>
      <if test="title != null and title != ''">
          ${alias1}title = #{title},
      </if>
      <if test="addr1 != null and addr1 != ''">
          ${alias1}addr1 = #{addr1},
      </if>
      <if test="addr2 != null and addr2 != ''">
          ${alias1}addr2 = #{addr2},
      </if>
      <if test="area_code != null">
          ${alias1}area_code = #{area_code},
      </if>
      <if test="content_type_id != null">
          ${alias1}content_type_id = #{content_type_id},
      </if>
      <if test="latitude != null">
          ${alias1}latitude = #{latitude},
      </if>
      <if test="longitude != null">
          ${alias1}longitude = #{longitude},
      </if>
      <if test="mlevel != null and mlevel != ''">
          ${alias1}mlevel = #{mlevel},
      </if>
      <if test="tel != null and tel != ''">
          ${alias1}tel = #{tel},
      </if>
      <if test="first_image != null and first_image != ''">
          ${alias1}first_image = #{first_image},
      </if>
      <if test="first_image2 != null and first_image2 != ''">
          ${alias1}first_image2 = #{first_image2},
      </if>
      <if test="cat1 != null and cat1 != ''">
          ${alias1}cat1 = #{cat1},
      </if>
      <if test="cat2 != null and cat2 != ''">
          ${alias1}cat2 = #{cat2},
      </if>
      <if test="cat3 != null and cat3 != ''">
          ${alias1}cat3 = #{cat3},
      </if>
      <if test="book_tour != null and book_tour != ''">
          ${alias1}book_tour = #{book_tour},
      </if>
      <if test="update_date != null and update_date != ''">
          ${alias1}update_date = now(),
      </if>
      <if test="is_custom != null">
          ${alias1}is_custom = #{is_custom},
      </if>
      <if test="sigungucode != null">
          ${alias1}sigungucode = #{sigungucode},
      </if>
      <if test="${isIncludeExtraInfo}==true">
      	  ${alias2}description=#{extra_info.description},
      	  ${alias2}create_by=#{extra_info.create_by},
      	  ${alias2}create_by=#{extra_info.create_by},
      	  
      </if>
  </set>
</sql>

<sql id="whereUpdatePlaceInfo">
<where>
  AND ${alias1}content_id = #{content_id}
  <if test="${isIncludeExtraInfo}==true">
  AND ${alias1}content_id = ${alias2}content_id
  AND content_id LIKE 'u__%'
  OR content_id LIKE 'r__%'
  </if>
</where>
</sql>

<sql id="whereSearchPlaceInfoList">
	 <where>
       <if test="title != null and title != ''">
           AND ${alias1}title LIKE CONCAT('%', #{title}, '%')
       </if>
       <if test="content_type_id != null">
           AND ${alias1}content_type_id = #{content_type_id}
       </if>
       <if test="sidocode != null and sidocode !=0">
           AND ${alias1}area_code = #{sidocode}
       </if>
   </where>
</sql>

<select id="selectOnePlaceInfo" parameterType="String" resultMap="placeInfoDtoMap">
   SELECT 
   		place.title, 
        place.addr1, 
        place.addr2, 
        place.area_code, 
        place.content_type_id, 
        place.latitude, 
        place.longitude, 
        place.tel, 
        place.first_image, 
        place.first_image2, 
        place.cat1, 
        place.book_tour, 
        place.update_date, 
        place.create_date, 
        place.content_id,
        place.sigungucode,
        (select if(place.is_custom=0,Null,place.is_custom)) as is_custom_info,
		extra.content_id as extra_content_id,
		extra.description as extra_description,
		extra.create_by as extra_create_by,
		extra.is_delete as extra_is_delete,
		extra.delete_at as extra_delete_at,
		extra.create_at as extra_create_at
    FROM place_info place
   LEFT JOIN place_info_extra extra
   ON place.content_id = extra.content_id
   WHERE content_id = #{content_id}
</select>

<select id="selectPlaceInfoList" parameterType="placeSearchDto"  resultMap="placeInfoDtoMap">
   SELECT 
   		place.title, 
        place.addr1, 
        place.addr2, 
        place.area_code, 
        place.content_type_id, 
        place.latitude, 
        place.longitude, 
        place.tel, 
        place.first_image, 
        place.first_image2, 
        place.cat1, 
        place.book_tour, 
        place.update_date, 
        place.create_date, 
        place.content_id,
        place.sigungucode,
        (select if(place.is_custom=0,Null,place.is_custom)) as is_custom_info,
		extra.content_id as extra_content_id,
		extra.description as extra_description,
		extra.create_by as extra_create_by,
		extra.is_delete as extra_is_delete,
		extra.delete_at as extra_delete_at,
		extra.create_at as extra_create_at
    FROM place_info place
   LEFT JOIN place_info_extra extra
   ON place.content_id = extra.content_id
   <include refid="whereSearchPlaceInfoList">
   	<property name="alias1" value=""/>
   </include>
   LIMIT #{start}, #{size}
   
   
</select>


<select id="selectOnePlaceInfoExtra" parameterType="String" resultMap="placeInfoExtraDtoMap">
	select 
	content_id,
	description,
	create_by,
	is_delete,
	delete_at,
	create_at
	from place_info_extra
	where content_id = #{content_id}
</select>

<insert id="insertCustomPlaceInfo" parameterType="placeInfoDto">
 <selectKey order="BEFORE"  keyProperty="content_id,extra_info.content_id" resultType="hashMap" keyColumn="cnt1,cnt2">
 	select custom_cnt.cnt as cnt1, custom_cnt.cnt as cnt2 
 	from 
 	(select CONCAT('u__',ifnull((max(CONVERT(substring(content_id,4),SIGNED))+1),1)) as cnt from place_info_extra ) as custom_cnt
 </selectKey>
	INSERT INTO place_info(content_id, title, addr1, addr2, area_code, content_type_id, latitude, longitude, mlevel, tel, first_image, first_image2, book_tour, is_custom, sigungucode)
	VALUES (#{content_id}, #{title}, #{addr1}, #{addr2}, #{area_code}, #{content_type_id}, #{latitude}, #{longitude}, #{mlevel}, #{tel}, #{first_image}, #{first_image2}, #{book_tour}, 1, #{sigungucode})
</insert>


<insert id="insertCustomPlaceInfoExtra" parameterType="placeInfoExtraDto">
 INSERT INTO place_info_extra (content_id, description, create_by)
 VALUES (#{content_id}, #{description}, #{create_by})
</insert>


<update id="updatePlaceInfo" parameterType="placeInfoDto">
  UPDATE place_info
  <include refid="setPlaceInfo"/>
  <include refid="whereUpdatePlaceInfo"/>	
</update>

<update id="updateCustomPlaceInfo" parameterType="placeInfoDto">
  UPDATE place_info as a, place_info_extra as b
  <include refid="setPlaceInfo">
  	<property name="isIncludeExtraInfo" value="true"/>
  	<property name="alias1" value="a."/>
  	<property name="alias2" value="b."/>
  </include>
  <include refid="whereUpdatePlaceInfo">
  	<property name="isIncludeExtraInfo" value="true"/>
  	<property name="alias1" value="a."/>
  	<property name="alias2" value="b."/>
  </include>	
</update>



<delete id="deletePlaceInfoExtraOneMonthfromDeleteAt">
DELETE from a using place_info_extra a Inner join place_info b
where a.content_id like 'u__%' 
and a.content_id=b.content_id 
and a.is_delete = 1
and (b.delete_at &lt; DATE_SUB( now(), INTERVAL 30 DAY))
</delete>
<delete id="deletePlaceInfoOneMonthfromDeleteAt">
DELETE from place_info
where content_id like 'u___%' 
and not exists(select content_id from place_info_extra)
</delete>

<update id="updateDeleteStatus" parameterType="placeInfoExtraDto">
  UPDATE place_info_extra
  <set>
  is_delete = #{is_delete}, 
  <if test="is_delete ==1">
  delete_at = now()
  </if>
  </set>
  WHERE content_id = #{content_id}
</update>
</mapper>
